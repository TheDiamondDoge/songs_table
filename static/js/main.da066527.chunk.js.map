{"version":3,"sources":["components/observing-icon/img/view.png","components/observing-icon/observing-icon.module.css","components/app/app.module.css","components/songs-table/songs-table.module.css","components/observing-icon/observing-icon.tsx","components/songs-table/comps/song-row/song-row.tsx","components/songs-table/songs-table.tsx","containers/songs-table.container.tsx","actions/songs.ts","components/app/app.tsx","reducers/songs.ts","reducers/index.ts","api/songs.ts","sagas/worker-sagas.ts","sagas/watcher-sagas.ts","sagas/index.ts","index.tsx"],"names":["module","exports","ObservingIcon","memo","classname","classes","classNames","styles","icon","alt","src","className","title","SongRow","song","isObserving","onClick","onRowClick","useCallback","id","id_column","song_column","band","name","observe_icon","SongsTable","songs","loading","observing","headerStyleId","header","headerStyleSong","table","thead","map","key","SongsTableContainer","dispatch","useDispatch","useSelector","state","songsTable","payload","onSongClick","type","observeSong","useEffect","sort","a","b","App","wrapper","initState","combineReducers","action","SONGS_ARR","getSongs","time","Math","floor","random","Promise","resolve","setTimeout","loadSongs","call","data","put","watchLoadSongs","takeEvery","exportSagas","fork","rootSaga","all","middleware","sagas","createSagaMiddleware","applyMiddleware","store","createStore","reducer","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da066527.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/view.d58934fe.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"observing-icon_icon__2D4BU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app_wrapper__lkJh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"songs-table_table__1jkBV\",\"thead\":\"songs-table_thead__m1wlC\",\"header\":\"songs-table_header__1_uia\",\"id_column\":\"songs-table_id_column__3cfSK\",\"song_column\":\"songs-table_song_column__23BdH\",\"observe_icon\":\"songs-table_observe_icon__2De4m\"};","import React, {FC, memo} from 'react';\r\nimport icon from './img/view.png';\r\nimport styles from './observing-icon.module.css';\r\nimport classNames from 'classnames';\r\n\r\ninterface ObservingIconProps {\r\n    classname?: string\r\n}\r\n\r\nconst ObservingIcon: FC<ObservingIconProps> = memo(({classname}) => {\r\n    const classes = classNames(styles.icon, classname);\r\n    return (\r\n        <img\r\n            alt='observing'\r\n            src={icon}\r\n            className={classes}\r\n            title='В списке отслеживаемых'\r\n        />\r\n    )\r\n});\r\n\r\nexport default ObservingIcon;","import React, {FC, memo, useCallback} from 'react';\r\nimport styles from '../../songs-table.module.css';\r\nimport ObservingIcon from '../../../observing-icon/observing-icon';\r\nimport {Song} from '../../../../interfaces';\r\n\r\ninterface SongRowProps {\r\n    song: Song,\r\n    isObserving?: boolean,\r\n    onClick: (id: number) => void\r\n}\r\n\r\nconst SongRow: FC<SongRowProps> = memo(({\r\n    song,\r\n    isObserving = false,\r\n    onClick\r\n}) => {\r\n    const onRowClick = useCallback(() =>\r\n        onClick(song.id),\r\n        [onClick, song.id]\r\n    );\r\n\r\n    return (\r\n        <tr onClick={onRowClick}>\r\n            <td className={styles.id_column}>\r\n                {song.id}\r\n            </td>\r\n            <td className={styles.song_column}>\r\n                {`${song.band} - ${song.name}`}\r\n                {isObserving && <ObservingIcon classname={styles.observe_icon}/>}\r\n            </td>\r\n        </tr>\r\n    )\r\n});\r\n\r\nexport default SongRow;","import React, {FC, memo} from 'react';\r\nimport styles from './songs-table.module.css';\r\nimport SongRow from './comps/song-row/song-row';\r\nimport classNames from 'classnames';\r\nimport {Song} from '../../interfaces';\r\n\r\ninterface SongsTable {\r\n    songs: Song[],\r\n    onRowClick: (id: number) => void,\r\n    observing?: number,\r\n    loading?: boolean\r\n}\r\n\r\nconst SongsTable: FC<SongsTable> = memo(({\r\n    songs,\r\n    loading = false,\r\n    onRowClick,\r\n    observing\r\n}) => {\r\n    if (loading) {\r\n        return <span>Loading...</span>;\r\n    }\r\n\r\n    const headerStyleId = classNames(styles.header, styles.id_column,);\r\n    const headerStyleSong = classNames(styles.song_column, styles.header);\r\n\r\n    return (\r\n        <table className={styles.table}>\r\n            <thead className={styles.thead}>\r\n            <tr>\r\n                <th className={headerStyleId}>\r\n                    ID\r\n                </th>\r\n                <th className={headerStyleSong}>\r\n                    Песня\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n            {songs.map(\r\n                song => {\r\n                    let isObserving = song.id === observing;\r\n                    return (\r\n                        <SongRow\r\n                            key={song.id}\r\n                            onClick={onRowClick}\r\n                            song={song}\r\n                            isObserving={isObserving}\r\n                        />\r\n                    )\r\n                }\r\n            )}\r\n\r\n            </tbody>\r\n        </table>\r\n    );\r\n});\r\n\r\nexport default SongsTable;","import React, {FC, memo, useCallback, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport SongsTable from '../components/songs-table/songs-table';\r\nimport {loadSongs, observeSong} from '../actions/songs';\r\nimport {Song, Store} from '../interfaces';\r\n\r\nconst SongsTableContainer: FC = memo(() => {\r\n    const dispatch = useDispatch();\r\n    const {loading, payload} = useSelector((state: Store) => (state.songsTable));\r\n    const {songs, observing} = payload;\r\n    const onSongClick = useCallback((id: number) => {\r\n        dispatch(observeSong(id))\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadSongs());\r\n    }, [dispatch]);\r\n\r\n    songs.sort((a: Song, b: Song) => a.id - b.id);\r\n    return (\r\n        <SongsTable\r\n            loading={loading}\r\n            songs={songs}\r\n            observing={observing}\r\n            onRowClick={onSongClick}\r\n        />\r\n    )\r\n})\r\n\r\nexport default SongsTableContainer;","import {Song} from '../interfaces';\r\n\r\nexport const SONGS_LOAD = 'SONGS_LOAD';\r\nexport const SONGS_LOAD_SUCCESS = 'SONGS_LOAD_SUCCESS';\r\nexport const SONG_OBSERVE = 'SONG_OBSERVE';\r\n\r\nexport const loadSongs = () => ({\r\n    type: SONGS_LOAD,\r\n});\r\n\r\nexport const loadSongsSuccess = (songs: Song[]) => ({\r\n    type: SONGS_LOAD_SUCCESS,\r\n    songs,\r\n});\r\n\r\nexport const observeSong = (id: number) => ({\r\n    type: SONG_OBSERVE,\r\n    id\r\n});","import React, {FC} from 'react';\r\nimport SongsTable from '../../containers/songs-table.container';\r\nimport styles from './app.module.css';\r\n\r\nconst App: FC = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <SongsTable />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import {SONG_OBSERVE, SONGS_LOAD, SONGS_LOAD_SUCCESS} from '../actions/songs';\r\nimport {Song, SongsTable} from '../interfaces';\r\n\r\nconst initState = {\r\n    loading: false,\r\n    payload: {\r\n        songs: [],\r\n        observing: 0\r\n    }\r\n}\r\n\r\ninterface Action {\r\n    type: string,\r\n    id?: number,\r\n    songs?: Song[]\r\n}\r\n\r\nexport default (state: SongsTable = initState, action: Action) => {\r\n    switch (action.type) {\r\n        case SONGS_LOAD: {\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        }\r\n        case SONGS_LOAD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                payload: {\r\n                    ...state.payload,\r\n                    songs: action.songs\r\n                }\r\n            }\r\n        }\r\n        case SONG_OBSERVE: {\r\n            return {\r\n                ...state,\r\n                payload: {\r\n                    ...state.payload,\r\n                    observing: action.id === state.payload.observing ? 0 : action.id\r\n                }\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport songs from './songs';\r\n\r\nexport default combineReducers({\r\n    songsTable: songs\r\n})","import {Song} from '../interfaces';\r\n\r\nexport const SONGS_ARR: Song[] = [\r\n    {\r\n        id: 1,\r\n        band: 'Tool',\r\n        name: 'Fear Inoculum',\r\n    },\r\n    {\r\n        id: 3,\r\n        band: 'Tool',\r\n        name: 'Pneuma',\r\n    },\r\n    {\r\n        id: 9,\r\n        band: 'Tool',\r\n        name: 'Invincible',\r\n    },\r\n    {\r\n        id: 2,\r\n        band: 'Tool',\r\n        name: 'Descending',\r\n    },\r\n    {\r\n        id: 4,\r\n        band: 'Tool',\r\n        name: '7mpest',\r\n    },\r\n];\r\n\r\nexport function getSongs() {\r\n    const time = Math.floor(Math.random() * 5) + 1;\r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            resolve(SONGS_ARR);\r\n        }, time * 1000);\r\n    })\r\n}\r\n","import {call, put} from 'redux-saga/effects';\r\nimport {getSongs} from '../api/songs';\r\nimport {loadSongsSuccess} from '../actions/songs';\r\nimport {Song} from '../interfaces';\r\n\r\nexport function* loadSongs() {\r\n    try {\r\n        const data: Song[] = yield call(getSongs);\r\n        yield put(loadSongsSuccess(data));\r\n    } catch (e) {\r\n\r\n    }\r\n}","import {takeEvery, fork} from 'redux-saga/effects';\r\nimport {SONGS_LOAD} from '../actions/songs';\r\nimport {loadSongs} from './worker-sagas';\r\n\r\nfunction* watchLoadSongs() {\r\n    yield takeEvery(SONGS_LOAD, loadSongs);\r\n}\r\n\r\nconst exportSagas = [\r\n    fork(watchLoadSongs)\r\n];\r\n\r\nexport default exportSagas;","import {all} from 'redux-saga/effects';\r\nimport exportSagas from './watcher-sagas';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        ...exportSagas\r\n    ]);\r\n}","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport {applyMiddleware, createStore} from 'redux';\r\nimport reducer from './reducers';\r\nimport {createLogger} from 'redux-logger';\r\nimport {Provider} from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagas = createSagaMiddleware();\r\nlet middleware;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n    middleware = applyMiddleware(\r\n        createLogger(),\r\n        sagas\r\n    );\r\n} else {\r\n    middleware = applyMiddleware(\r\n        sagas\r\n    );\r\n}\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    middleware\r\n);\r\n\r\nsagas.run(rootSaga);\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}